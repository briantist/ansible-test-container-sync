---
name: sync ansible-test containers
on:
  workflow_dispatch:
  # schedule:

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - milestone
          - devel
    env:
      IMAGES: test/lib/ansible_test/_data/completion/docker.txt
      TARGET: ghcr.io/${{ github.repository_owner }}
      # GOBIN: ${{ github.workspace }}/bin
    steps:
      # - name: Add GOBIN to PATH
      #   run: echo "$GOBIN" >> $GITHUB_PATH

      - name: Checkout Ansible
        uses: actions/checkout@v2
        with:
          repository: ansible/ansible
          ref: ${{ matrix.ansible }}

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: GO cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-

      - name: Install sinker
        run: go install github.com/plexsystems/sinker@6deb84651a9129e616480890bf86b1d6e1108eaf  # v0.15.0

      - name: Create manifest
        shell: pwsh
        run: |
          Get-Content -LiteralPath $env:IMAGES |
          ForEach-Object -Process {
              $_ -replace '^.*?(?:image|name)=(\S+).*?$', '$1'
          } |
          Tee-Object -FilePath '${{ runner.temp }}/images.txt' |
          & sinker create - --target $env:TARGET

      - name: DEBUG
        run: cat .images.yaml

      - name: Login to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push
        run: sinker push

      - name: Get regctl
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
          chmod 755 regctl

      - name: Tagify
        shell: pwsh
        run: |
          Get-Content -LiteralPath '${{ runner.temp }}/images.txt' |
          ForEach-Object -Process {
              $src = $_ -replace '^[^/]+', $env:TARGET
              $dst = $src -replace ':.*?$', ':${{ matrix.ansible }}'

              & ./regctl image copy --verbosity info $src $dst
          }
